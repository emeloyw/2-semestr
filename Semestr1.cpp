#include "Header.h"
void Maska() {
    setlocale(LC_ALL, "Russian");
    int i = 0;
    const short A = 20, a = 100, b = 32500;
    short m[A];
    cout << "Задание: \nВывести числа массива, которые удовлетворяют битовой маске.\n\nДан массив:" << endl;

    for (i = 0; i < A; i++) {
        m[i] = rand() % (b - a) + a;
        cout << m[i] << " ";
    }

    short Mask;
    cout << "\nВведите битовую маску: ";
    cin >> Mask;
    cout << "\n\nПолученный результат:\nЧисла, которые соответствуют битовой маске битовой маске:\n";
    for (i = 0; i < A; i++) {
        if ((m[i] & Mask) == Mask)
            cout << m[i] << " ";
    }
    cout << "\n\n\n\n";
    PAUSE;
}

void Creator() {
    cout << "Программу выполнил студент группы 1бИТС2 Тупицына Наталия Алексеевна\n\n\n";
}

void lab2_1() {

    int a_1, a_2, Xmin{}, index_xmin{}, Amax, index_Amax;
    setlocale(LC_ALL, "Russian"); // Русский вывод
    //cout << "Автор: Тупицына Наталия Алексеевна 1бИТС2 Тема: Алгоритмы с ветвлением: Вычисления с выбором формул" << endl;
    //Ввод значения переменных
    cout << "\nВведите a1 = "; cin >> a_1;
    cout << "Введите a2 = "; cin >> a_2;
    //Выводим на экран введенные с консоли значения
    cout << "\n\nИсходные данные:" << endl << "a1 = " << a_1 << endl << "a2 = " << a_2;
    //поиск максимального а и его индекса
    if (a_1 < a_2)
    {
        Amax = a_2;
        index_Amax = 2;
    }
    else {
        Amax = a_1;
        index_Amax = 1;
    }
    cout << "\n\nРезультаты:" << "\n\nМаксимальное введенное значение а равно " << Amax << "\n\nИндекс этого значения " << index_Amax;
    //Считаем значения данных выражений
    int x1 = a_1 - a_2;
    int x2 = (a_2 * a_2) - a_1;
    int x3 = a_1 * (x1 + x2);
    cout << "\n\nx1 = a1 - a2 = " << x1 << "\nx2 = (a2 * a2) - a1 = " << x2 << "\nx3 = a1 * (x1 + x2) = " << x3;
    //Поиск минимального х и его индекса
    if (x1 > x2) {
        Xmin = x2;
        index_xmin = 2;
    }
    else {
        Xmin = x1;
        index_xmin = 1;
    }
    if (Xmin > x3) {
        Xmin = x3;
    }
    cout << "\n\nМинимальное значение выражения равно " << Xmin << "\n\nИндекс этого выражения равен " << index_xmin <<"\n\n\n";
    PAUSE;
}

void lab2_2() {
    double A, B, C, k1, k2, check = 1, k = 1;
    //cout << "Выполнила: Тупицына Наталия Алексеевна 1бИТС2";
    while (check) {
        cout << "\nНомер теста " << k << "\n";
        //Вводим значения
        cout << "\n\nВведите значение А: ";
        cin >> A;
        cout << "Введите значение В: ";
        cin >> B;
        cout << "Введите значение С: ";
        cin >> C;
        cout << "\n\nИсходные данные: " << "\nА= " << A << "\nВ= " << B << "\nС= " << C;//Выводим введеные с консоли значения
        if (A > 0 && B > 0 && C > 0) {//Защита от ошибок пользователя
            if (A * A + B * B == C * C) //Проверяем условие
                cout << "\n(A,B) - координаты точки, С - расстояние от центра координат до этой точки\n";

            else if (C * C + B * B == A * A) //Проверяем условие
                cout << "\n(C,B) - координаты точки, A - расстояние от центра координат до этой точки\n";

            else if (A * A + C * C == B * B)//Проверяем условие
                cout << "\n(A,C) - координаты точки, B - расстояние от центра координат до этой точки\n";
            else
                cout << "\nНе связаны таким отношением";
        }
        else
            cout << "\n\nОшибка! Все три значения должны быть положительными\n";
        cout << "\n\nХотите продолжить?\nДа - 1 \n Нет - 0\n";
        cin >> check;
        while (check != 0 && check != 1) { // Проверка правильности введенных данных
            cout << "\nНеправильно введено значение!\nХотите продолжить?\nДа - 1\nНет - 0\n";
            cin >> check;
        }
        k++;
    }
    cout << "\n\n\n";
    PAUSE;
}

void lab3_1() {
    setlocale(LC_ALL, "Rus");
    int A, N, k, n = 0, x_1 = 0;//Объявление переменных
    double dx, y{}, x, i;
    const double OMEGA = 37;
    //cout << "Автор: Тупицына Наталия 1бИТС2 Тема: Циклические алгоритмы: Организация цикла с несколькими параметрами и проверкой условий" << endl;
    do { //Исключение некорректного значения N
        cout << "\nВведите колическтво точек N: ";
        cin >> N;
        if (N < 1)
            cout << "Ошибка! N должно быть натуральным!\n";
    } while (N < 1);
    do { // Исключение некорректного значения A
        cout << "Введите положительный параметр A: ";
        cin >> A;
        if (A < 0)
            cout << "A должно быть положительным\n";
    } while (A < 0);
    dx = (A / static_cast<double>(4));
    do { //Исключение неккоректного значения k
        cout << "Введите положительное значение коэффициента выбранной функции K: ";
        cin >> k;
        if (k * A < x_1)
            cout << "k должно быть больше x_1/А= " << x_1 / A << endl;
    } while (k < 0);
    cout << "\n\nИсходные данные:" << "\nКоличество точек = " << N << "\nПараметр A = " << A << "\nКоэффициент выбранной функции K = " << k << "\nШаг = " << dx << "\nНачальная точка = " << x_1 << endl;
    cout << "N" << setw(13) << "X" << setw(20) << "Y" << endl;
    for (i = 1; i <= OMEGA;) {
        cout << "_";
        i = i + 1;
    }
    // Дополнительные значения
    x = x_1;
    while (n < N) { //Цикл отвечающий за количество точек, которые будут выведены
        if (x <= k * A) { //Определение по какой формуле будем считать коорджинату Y
            y = A - ((8 * pow(A, 3)) / (pow(x, 2) + (4 * pow(A, 3))));
        }
        if (x > k * A) {
            y = (-A) * (sqrt(abs(1 - ((pow(x, 2)) / (4 * pow(A, 2))))));
        }
        //Вывод точек
        cout << endl << setprecision(3) << setw(12) << left << n + 1 << setw(10) << floor(x * 1000 + 0.5) / 1000 << right << y << endl;
        //Вычисление координаты Х следующей точки
        x = x + dx;
        n++;
    } while (n < N);
    for (i = 1; i <= OMEGA;) {
        cout << "_";
        i = i + 1;
    }
    cout << "\n\n\n";
    PAUSE;
}


void lab3_2() {
#define N 5
    //Подключение русского языка в консоле
    setlocale(LC_ALL, "Rus");
    int i, a = 0, imax;
    double x[N];
    double l[N];
    double z[N];
    cout << "Автор: Тупицына Наталия Алексеевна группа 1бИТС2";
    for (i = 0; i < N; i++) {
        cout << "\nВведите " << i + 1 << " элементы массивов х и l\n" << "x[" << i + 1 << "]=";
        cin >> x[i];
        cout << "l[" << i + 1 << "]=";
        cin >> l[i];
        while (x[i] == 0) {
            cout << "\nВведите ненулевое значение x,0 не может быть эллементом массива\n" << "x[" << i + 1 << "]=";
            cin >> x[i];
            cout << "l[" << i + 1 << "]=" << l[i];
        }
        while (l[i] == 0) {
            cout << "\nВведите ненулевое значение l,0 не может быть эллементом массива\n" << "l[" << i + 1 << "]=";
            cin >> l[i];
        }
        a += (x[i] - l[i]);
    }
    cout << "Массив Z:\n\n";
    cout << "[ ";
    double MAXE = -2147483648;//Этап поиска масимума
    for (i = 0; i < N; i++) {
        z[i] = (a / (sqrt(abs(x[i] * l[i]))));
        cout << z[i] << " ";
        if (MAXE < z[i]) {
            MAXE = z[i];
            imax = i;
        }
    }
    cout << " ]";
    cout << "\n\nМаксимальный элемент массива равен " << MAXE << "\nЕго индекс равен " << imax + 1;
    if (imax < N / 2) {
        if (imax >= 1) {
            cout << "\n\nz[" << imax + 1 << "]:" << "находится в первой половине массива";
            for (i = 0; i < imax; i++)
                z[i] = x[1];
        }
        if (imax < 1)
            cout << "\n\nМассив не изменился\n";
    }
    if (imax >= N / 2) {
        cout << "\n\nz[" << imax + 1 << "]:" << "находится во второй половине массива";
        for (i = 0; i < N; i++)
            z[i] = z[i] / 2;
    }
    cout << "\n\nИзмененный массив Z:\n\n";
    cout << "[ ";
    for (i = 0; i < N; i++) {
        cout << z[i] << " ";
    }
    cout << "]";
    PAUSE;
}

void lab4() {
#define ROW 5
#define COL 5 
    int m = 1, s = 0, i{}, j, k, n[COL], a[ROW][COL], t; // Объявление переменных
    setlocale(LC_ALL, "Russian"); // Русский вывод
    double  b[COL], P, sr;
    cout << "Автор: Тупицына Наталия 1бИТС2" << endl;
    // Ввод матрицы
    for (i = 0; i < ROW; i++) //Ввод матрицы a
    {
        cout << i + 1 << " строка ( по " << COL << " эл.) :";
        for (j = 0; j < COL; j++) cin >> a[i][j];
    }
    cout << endl << "Результаты: " << endl;
    cout << endl << "Исходная матрица " << endl;
    for (i = 0; i < ROW; i++) //Вывод исходной матрицы
    {
        for (j = 0; j < COL; j++) cout << setw(6) << a[i][j];
        P = a[0][0] * a[4][4];
        cout << endl;
    }
    cout << "Произведение первого элемента матрицы на последний " << P << endl;
    for (j = 0; j < ROW; j++) {
        s = 0;
        for (i = 0; i < COL; i++) {
            s += a[i][j];
            k = 0;
        }
        sr = s / static_cast<double>(COL);
        b[j] = sr;
    }
    cout << endl << "Среднее арифм столбцов :";
    for (j = 0; j < COL; j++)
        cout << "|" << b[j] << "| "; cout << endl;
    // Поиск столбцов, удволетворяющих условие
    for (j = 0; j < COL; j++)
    {
        if (b[j] > a[4][j]) {
            n[k] = j; k++;
        }
    }
    if (k > 0)
    {
        cout << endl << "Условию соответствуют столбцы: ";
        for (t = 0; t < k; t++) {
            for (i = 0; i < ROW; i++)
                a[i][n[t]] += P;
            cout << n[t] + 1 << setw(4);
        }
        cout << "\nИзмененная матрица:\n    ";
        for (i = 0; i < ROW; i++) {
            for (j = 0; j < COL; j++)
                cout << a[i][j] << setw(6); cout << endl;
        }
    }
    else cout << "\nМатрица не изменяется\n\n\n" << endl;
    PAUSE;
}
